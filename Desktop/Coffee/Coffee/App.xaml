<Application
    x:Class="Coffee.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Coffee"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    StartupUri="Views/Admin/MainAdminWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                <ResourceDictionary Source="/ResourcesXAML/MainResources.xaml" />
                <ResourceDictionary Source="/ResourcesXAML/Themes/Light.xaml" />
                <ResourceDictionary Source="/ResourcesXAML/Languages/LanguageVi.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="MenuHorizontalMain" TargetType="RadioButton">
                <!--  Normal button style  -->
                <Setter Property="Height" Value="60" />
                <Setter Property="Background" Value="{DynamicResource HoverColorCF}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundCF}" />
                <Setter Property="BorderBrush" Value="{DynamicResource HoverColorCF}" />
                <Setter Property="Width" Value="130" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="16">
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!--  Button Style on hover  -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource BackgroundCF}" />
                        <Setter Property="Foreground" Value="{DynamicResource MainColorCF}" />
                        <!--<Setter Property="BorderBrush" Value=""/>-->
                        <Setter Property="Cursor" Value="Hand" />
                    </Trigger>

                    <!--  Activated button style  -->
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{DynamicResource BackgroundCF}" />
                        <Setter Property="Foreground" Value="{DynamicResource MainColorCF}" />
                        <!--<Setter Property="BorderBrush" Value=""/>-->
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MenuButtonMain" TargetType="RadioButton">
                <!--  Normal button style  -->
                <Setter Property="Height" Value="50" />
                <Setter Property="Margin" Value="0,10,0,5" />
                <Setter Property="Background" Value="{DynamicResource BackgroundCF}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundCF}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushCF}" />
                <Setter Property="Width" Value="185" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="4,0,0,0"
                                CornerRadius="8">
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!--  Button Style on hover  -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource HoverColorCF}" />
                        <Setter Property="Foreground" Value="{DynamicResource BackgroundCF}" />
                        <!--<Setter Property="BorderBrush" Value=""/>-->
                        <Setter Property="Cursor" Value="Hand" />
                    </Trigger>

                    <!--  Activated button style  -->
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MainColorCF}" />
                        <Setter Property="Foreground" Value="{DynamicResource BackgroundCF}" />
                        <!--<Setter Property="BorderBrush" Value=""/>-->
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="menuButtonIcon" TargetType="materialDesign:PackIcon">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
                <Setter Property="Width" Value="25" />
                <Setter Property="Height" Value="25" />
                <Setter Property="Margin" Value="20,0,20,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Cursor" Value="Hand" />
            </Style>

            <!--  Menu button text  -->
            <Style x:Key="menuButtonText" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
                <Setter Property="FontFamily" Value="Montserrat" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <!--  Header 1  -->
            <Style x:Key="Header1" TargetType="TextBlock">
                <Setter Property="FontSize" Value="35" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="{DynamicResource MainColorCF}" />
            </Style>

            <!--  Header 2  -->
            <Style x:Key="Header2" TargetType="TextBlock">
                <Setter Property="FontSize" Value="25" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundCF}" />
            </Style>

            <!--  Header 2  -->
            <Style x:Key="txblNormarl" TargetType="TextBlock">
                <Setter Property="FontSize" Value="13.5" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundCF}" />
            </Style>

            <!--  TextBox  -->
            <Style
                x:Key="txbStyle"
                BasedOn="{StaticResource MaterialDesignOutlinedTextBox}"
                TargetType="TextBox">
                <Setter Property="Width" Value="300" />
                <Setter Property="Height" Value="50" />
                <Setter Property="SelectionBrush" Value="{DynamicResource MainColorCF}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MainColorCF}" />
                <Setter Property="CaretBrush" Value="{DynamicResource HoverColorCF}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundCF}" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontSize" Value="13.5" />
            </Style>

            <!--  PasswordBox  -->
            <Style
                x:Key="pwbStyle"
                BasedOn="{StaticResource MaterialDesignOutlinedRevealPasswordBox}"
                TargetType="PasswordBox">
                <Setter Property="Width" Value="300" />
                <Setter Property="Height" Value="50" />
                <Setter Property="SelectionBrush" Value="{DynamicResource MainColorCF}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MainColorCF}" />
                <Setter Property="CaretBrush" Value="{DynamicResource HoverColorCF}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundCF}" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontSize" Value="13.5" />
            </Style>

            <!--  Combobox  -->
            <Style
                x:Key="cbStyle"
                BasedOn="{StaticResource MaterialDesignOutlinedComboBox}"
                TargetType="ComboBox">
                <Setter Property="Width" Value="300" />
                <Setter Property="Height" Value="50" />
                <Setter Property="BorderBrush" Value="{DynamicResource MainColorCF}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundCF}" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontSize" Value="13.5" />
            </Style>

            <!--  Button  -->
            <Style
                x:Key="btnStyle"
                BasedOn="{StaticResource MaterialDesignRaisedButton}"
                TargetType="Button">
                <Setter Property="Width" Value="120" />
                <Setter Property="Height" Value="40" />
                <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="15" />
                <Setter Property="BorderBrush" Value="{DynamicResource MainColorCF}" />
                <Setter Property="Background" Value="{DynamicResource MainColorCF}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundCF}" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>

            <!--  Style cho DatePickerTextBox  -->
            <Style x:Key="DatePickerTextBoxStyle" TargetType="DatePickerTextBox">
                <Setter Property="IsReadOnly" Value="True" />
            </Style>

            <!--  Style cho CalendarDayButton  -->
            <Style
                x:Key="CalendarDayButtonStyle"
                BasedOn="{StaticResource MaterialDesignCalendarDayButton}"
                TargetType="CalendarDayButton">
                <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="{DynamicResource MainColorCF}" />
                <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="{DynamicResource BackgroundCF}" />
            </Style>

            <!--  Style cho CalendarButton  -->
            <Style
                x:Key="CalendarButtonStyle"
                BasedOn="{StaticResource MaterialDesignCalendarButton}"
                TargetType="CalendarButton">
                <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="{DynamicResource MainColorCF}" />
                <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="{DynamicResource BackgroundCF}" />
            </Style>

            <!--  Style cho Calendar  -->
            <Style
                x:Key="CalendarStyle"
                BasedOn="{StaticResource MaterialDesignDatePickerCalendarPortrait}"
                TargetType="{x:Type Calendar}">
                <Setter Property="Background" Value="{DynamicResource HoverColorCF}" />
                <Setter Property="CalendarButtonStyle" Value="{DynamicResource CalendarButtonStyle}" />
                <Setter Property="CalendarDayButtonStyle" Value="{DynamicResource CalendarDayButtonStyle}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundCF}" />
                <Setter Property="materialDesign:CalendarAssist.HeaderBackground" Value="{DynamicResource MainColorCF}" />
                <Setter Property="materialDesign:CalendarAssist.HeaderForeground" Value="{DynamicResource BackgroundCF}" />
            </Style>

            <!--  DatePicker  -->
            <Style
                x:Key="dpStyle"
                BasedOn="{StaticResource MaterialDesignOutlinedDatePicker}"
                TargetType="DatePicker">
                <Setter Property="Width" Value="300" />
                <Setter Property="Height" Value="50" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontSize" Value="13.5" />
                <Setter Property="CalendarStyle" Value="{DynamicResource CalendarStyle}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MainColorCF}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundCF}" />
            </Style>

            <!--  DatePicker2  -->
            <Style
                x:Key="dpStyle2"
                BasedOn="{StaticResource MaterialDesignOutlinedDatePicker}"
                TargetType="DatePicker">
                <Setter Property="Width" Value="130" />
                <Setter Property="Height" Value="50" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontSize" Value="13.5" />
                <Setter Property="CalendarStyle" Value="{DynamicResource CalendarStyle}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MainColorCF}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundCF}" />
            </Style>

            <!--  DataGrid  -->
            <Style x:Key="dtgStyle" TargetType="DataGrid">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="AutoGenerateColumns" Value="False" />
                <Setter Property="Background" Value="{DynamicResource BackgroundCF}" />
                <Setter Property="CanUserReorderColumns" Value="False" />
                <Setter Property="CanUserResizeColumns" Value="False" />
                <Setter Property="CanUserSortColumns" Value="True" />
                <Setter Property="ColumnWidth" Value="SizeToCells" />
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="SelectionMode" Value="Single" />
                <Setter Property="SelectionUnit" Value="FullRow" />
            </Style>

            <!--  Textblock in datagrid  -->
            <Style x:Key="txblInDtg" TargetType="TextBlock">
                <Setter Property="FontSize" Value="13" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <!--  Button in datagird  -->
            <Style
                x:Key="btnInDtg"
                BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}"
                TargetType="Button">
                <Setter Property="Width" Value="25" />
                <Setter Property="Height" Value="25" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundCF}" />
            </Style>

            <!--  Styling Scroll Bar  -->
            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle
                                    Width="Auto"
                                    Height="Auto"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Fill="Transparent" />
                                <Border
                                    x:Name="Rectangle1"
                                    Width="Auto"
                                    Height="Auto"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="5" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal">
                                    <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                    <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Foreground" Value="LightGray" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Width" Value="10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid
                                x:Name="GridRoot"
                                Width="8"
                                Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <!--  Scroll Track  -->
                                <Track
                                    x:Name="PART_Track"
                                    Grid.Row="0"
                                    Focusable="False"
                                    IsDirectionReversed="True">
                                    <Track.Thumb>
                                        <Thumb
                                            x:Name="Thumb"
                                            Background="{TemplateBinding Foreground}"
                                            Style="{DynamicResource ScrollThumbs}" />
                                    </Track.Thumb>

                                    <!--  Scroll Up on Page Up key press  -->
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton
                                            x:Name="PageUp"
                                            Command="ScrollBar.PageUpCommand"
                                            Focusable="False"
                                            Opacity="0" />
                                    </Track.IncreaseRepeatButton>

                                    <!--  Scroll Down on Page Down key press  -->
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton
                                            x:Name="PageDown"
                                            Command="ScrollBar.PageDownCommand"
                                            Focusable="False"
                                            Opacity="0" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="GridRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Height" Value="12" />
                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
