<Application x:Class="QuanLyChuoiCuaHangCoffee.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:QuanLyChuoiCuaHangCoffee"
             StartupUri="Views/Login/LoginWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                <ResourceDictionary Source="/ResourcesXAML/MainResources.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="PrimaryHueMidBrush"
                 Color="#696F79" />

            <SolidColorBrush x:Key="PrimaryHueDarkBrush"
                 Color="#696F79" />

            <Style x:Key="MenuButtonMain" TargetType="RadioButton">
                <!--Normal button style-->
                <Setter Property="Height" Value="50"/>
                <Setter Property="Margin" Value="-5,15,0,5"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#ffffff"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Width" Value="185"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="4,0,0,0"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="8">
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!--Button Style on hover-->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Margin" Value="0,15,0,5"/>
                        <Setter Property="Background" Value="#ebc660"/>
                        <Setter Property="Foreground" Value="#000000"/>
                        <!--<Setter Property="BorderBrush" Value="#5c3107"/>-->
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                    <!--Activated button style-->
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Margin" Value="0,15,0,5"/>
                        <Setter Property="Background" Value="#F0B000"/>
                        <Setter Property="Foreground" Value="#000000"/>
                        <!--<Setter Property="BorderBrush" Value="#5c3107"/>-->
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="menuButtonIcon" TargetType="materialDesign:PackIcon">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
                <Setter Property="Width" Value="22"/>
                <Setter Property="Height" Value="22"/>
                <Setter Property="Margin" Value="35,0,20,0"/>
            </Style>

            <!--Menu button text-->
            <Style x:Key="menuButtonText" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
                <Setter Property="FontFamily" Value="Montserrat"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <!-- style box item -->
            <Style x:Key="styleListBoxItems"
                   TargetType="{x:Type ListBoxItem}">
                <Setter Property="SnapsToDevicePixels"
                        Value="False" />
                <Setter Property="OverridesDefaultStyle"
                        Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Name="Border"
                                    Padding="5"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="datagridEditButton" TargetType="Button">
                <Setter Property="Background" Value="#512da8"/>
                <Setter Property="BorderBrush" Value="#4a148c"/>
                <Setter Property="Foreground" Value="#ffffff"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="2" Padding="12" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentControl VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#7950f2"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="datagridRemoveButton" TargetType="Button" BasedOn="{StaticResource datagridEditButton}">
                <Setter Property="Background" Value="#d32f2f"/>
                <Setter Property="BorderBrush" Value="#b71c1c"/>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#f44336"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CenterAlignmentCellStyle" TargetType="DataGridCell">
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>

            <Style TargetType="{x:Type DataGridRow}" x:Key="IncompleteRowStyle">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsIncomplete}" Value="True">
                        <Setter Property="Background" Value="#FA8072"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
